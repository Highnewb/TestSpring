<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="13.724" tests="7" errors="1" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="11.0.4+11-post-Ubuntu-1ubuntu218.04.3"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/highnewb/Cours/Mod_Env/tutorials/libraries-testing"/>
    <property name="java.vm.vendor" value="Ubuntu"/>
    <property name="java.vendor.url" value="https://ubuntu.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="FR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/highnewb/Cours/Mod_Env/tutorials/libraries-testing"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="11.0.4+11-post-Ubuntu-1ubuntu218.04.3"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.18.0-15-generic"/>
    <property name="user.home" value="/home/highnewb"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="highnewb"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean package"/>
    <property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
    <property name="user.language" value="fr"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="11.0.4"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="java.vendor" value="Ubuntu"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2019-07-16"/>
    <property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="givenValue_whenAddValue_thenValueAdded" classname="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="3.031"/>
  <testcase name="givenAsyncService_whenInitialize_thenInitOccurs_withDefualts" classname="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="2.001"/>
  <testcase name="givenAsyncService_whenInitialize_thenInitOccurs_withProxy" classname="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="0.65">
    <error message="Cannot define class using reflection" type="java.lang.UnsupportedOperationException"><![CDATA[java.lang.UnsupportedOperationException: Cannot define class using reflection
	at java.base/java.lang.Class.getMethod(Class.java:2108)
	at net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$CreationAction.run(ClassInjector.java:1260)
	at net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$CreationAction.run(ClassInjector.java:1248)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe.<clinit>(ClassInjector.java:1127)
	at net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection.load(ClassLoadingStrategy.java:458)
	at net.bytebuddy.dynamic.TypeResolutionStrategy$Passive.initialize(TypeResolutionStrategy.java:79)
	at net.bytebuddy.dynamic.DynamicType$Default$Unloaded.load(DynamicType.java:4456)
	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Indirect.make(ClassInjector.java:684)
	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction.run(ClassInjector.java:302)
	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction.run(ClassInjector.java:290)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection.<clinit>(ClassInjector.java:70)
	at net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher.load(ClassLoadingStrategy.java:184)
	at net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default.load(ClassLoadingStrategy.java:120)
	at net.bytebuddy.dynamic.TypeResolutionStrategy$Passive.initialize(TypeResolutionStrategy.java:79)
	at net.bytebuddy.dynamic.DynamicType$Default$Unloaded.load(DynamicType.java:4456)
	at net.bytebuddy.dynamic.DynamicType$Default$Unloaded.load(DynamicType.java:4446)
	at org.awaitility.proxy.internal.ByteBuddyProxyCreator.crateForParameters(ByteBuddyProxyCreator.java:69)
	at org.awaitility.proxy.internal.ByteBuddyProxyCreator.create(ByteBuddyProxyCreator.java:57)
	at org.awaitility.proxy.internal.MethodCallRecorder.createProxy(MethodCallRecorder.java:53)
	at org.awaitility.proxy.AwaitilityClassProxy.to(AwaitilityClassProxy.java:39)
	at com.baeldung.awaitility.AsyncServiceLongRunningManualTest.givenAsyncService_whenInitialize_thenInitOccurs_withProxy(AsyncServiceLongRunningManualTest.java:54)
]]></error>
  </testcase>
  <testcase name="givenAsyncService_whenInitialize_thenInitOccurs1" classname="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="2.012"/>
  <testcase name="givenAsyncService_whenInitialize_thenInitOccurs2" classname="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="2.007"/>
  <testcase name="givenAsyncService_whenInitialize_thenInitOccurs3" classname="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="2.012"/>
  <testcase name="givenAsyncService_whenGetValue_thenExceptionIgnored" classname="com.baeldung.awaitility.AsyncServiceLongRunningManualTest" time="2.011"/>
</testsuite>